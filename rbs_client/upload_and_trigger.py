import requests
import argparse
from pathlib import Path

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
FOLDER_PATH = "/home/shalenikol/0/rbs_dataset_2025-06-03_aubo_sim/rbs_bag/"
UPLOAD_URL = "http://localhost:8000/upload"
PROCESS_URL = "http://localhost:8000/process"

# === –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ ===
PROCESS_PARAMS = {
    "episode": 10,
    # "columns": ["id", "value"],
    "mode": "rosbag"
}

def upload_files(folder_path, ds_name):
    # folder = Path(folder_path)
    # files = list(folder.glob("*.*"))
    root = Path(folder_path)
    files = [str(p.relative_to(root)) for p in root.rglob("*") if p.is_file()]

    if not files:
        print("‚ùóÔ∏è–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ.")
        return False

    for rel_path in files:
        print(f"üì§ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: {rel_path} ...")
        file_path = root / rel_path
        with open(file_path, "rb") as f:
            files = {"file": (rel_path, f, "application/octet-stream")}
            response = requests.post(UPLOAD_URL, files=files, json={"dataset_name": ds_name})

        if response.ok:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ:", response.json())
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {file_path.name}: {response.status_code} - {response.text}")
            return False

    return True


def trigger_processing(params):
    print("üöÄ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...")
    try:
        response = requests.post(PROCESS_URL, json=params)
        if response.ok:
            print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞:", response.json())
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:", response.status_code, response.text)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º:", str(e))


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Send dataset to the server.")
    parser.add_argument("--dataset", type=str, default="your_ds_name", help="–ò–º—è –¥–∞—Ç–∞—Å–µ—Ç–∞ (—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ)")

    args = parser.parse_args()

    success = upload_files(FOLDER_PATH, args.dataset)
    if success:
        trigger_processing(PROCESS_PARAMS)
